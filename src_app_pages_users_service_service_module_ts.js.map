{"version":3,"sources":["./src/app/pages/users/service/service-routing.module.ts","./src/app/pages/users/service/service.module.ts","./src/app/pages/users/service/service.page.ts","./src/app/pages/users/service/service.page.scss","./src/app/pages/users/service/service.page.html"],"names":[],"mappings":"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","file":"src_app_pages_users_service_service_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ServicePage } from './service.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ServicePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ServicePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ServicePageRoutingModule } from './service-routing.module';\n\nimport { ServicePage } from './service.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ServicePageRoutingModule\n  ],\n  declarations: [ServicePage]\n})\nexport class ServicePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { TokenStorageService } from 'src/app/services/tokenstorage.service'\nimport { AlertService } from 'src/app/services/alert.service';\n\n@Component({\n  selector: 'app-service',\n  templateUrl: './service.page.html',\n  styleUrls: ['./service.page.scss'],\n})\nexport class ServicePage implements OnInit {\n\n  user_id: Number;\n  business_id: Number;\n  services: [];\n  messages: [];\n  service: string;\n  message: string;\n  businessName: string;\n  contactNo: Number;\n\n  constructor(private tokenStorage: TokenStorageService,\n              private userService: UserService,\n              private alertServie: AlertService\n             ) { }\n\n  ngOnInit() {\n    this.getUser();\n    this.getService();\n    this.getMessage();\n    this.getBusinessDetails();\n  }\n\n  getUser() {\n    let user = this.tokenStorage.DecodeToken();\n    this.user_id = user['user_id'];\n    this.business_id = user['business_id']\n  }\n\n  show(content) {\n    document.getElementById(content).style.display = 'block';\n  }\n\n  getBusinessDetails() {\n    this.userService.getBusinessDetails(this.user_id).subscribe(\n      data=> {\n        this.businessName = data['businessName'];\n        this.contactNo = data['contactNo'];\n      }\n    )\n  }\n\n  addBusinessDetails() {\n    this.userService.addBusinessDetails(this.user_id, this.businessName, this.contactNo).subscribe(\n      data => {\n        this.alertServie.presentToast(data['msg'], 'success');\n      }\n    )\n  }\n\n  async getService() {\n    await this.userService.getService(this.user_id).subscribe(\n      data => {\n        this.services = data['service'];\n      }\n    )\n  }\n\n  addService() {\n    this.userService.addService(this.user_id, this.business_id, this.service).subscribe(\n      async data=> {\n        this.alertServie.presentToast(data['msg'], 'success')\n        this.service = '';\n        document.getElementById('service').style.display = 'none';\n        await this.getService()\n      }\n    )\n  }\n  \n  deleteService(data) {\n    this.userService.deleteService(data).subscribe(\n      async data => {\n        this.alertServie.presentToast(data['msg'], 'success')\n        await this.getService();\n      }\n    )\n  }\n\n  async getMessage() {\n    await this.userService.getMessage(this.user_id).subscribe(\n      data => {\n        this.messages = data['message'];\n      }\n    )\n  }\n\n  addMessage() {\n    this.userService.addMessage(this.user_id, this.business_id, this.message).subscribe(\n      async data => {\n        this.alertServie.presentToast(data['msg'], 'success')\n        this.message = '';\n        document.getElementById('message').style.display = 'none';\n        await this.getMessage()\n      }\n    )\n  }\n\n  async deleteMessage(data) {\n    await this.userService.deleteMessage(data).subscribe(\n      data => {\n        this.alertServie.presentToast(data['msg'], 'success')\n        this.getMessage();\n      }\n    )\n  }\n}\n","export default \"#service, #message {\\n  display: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmIiwiZmlsZSI6InNlcnZpY2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3NlcnZpY2UsICNtZXNzYWdle1xuICBkaXNwbGF5OiBub25lO1xufSJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Service</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-header>\\n      Business Details\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Business Name</ion-label>\\n        <ion-input name=\\\"businessName\\\" type=\\\"text\\\" [(ngModel)]=\\\"businessName\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Contact Info</ion-label>\\n        <ion-input name=\\\"contactNo\\\" type=\\\"number\\\" [(ngModel)]=\\\"contactNo\\\"></ion-input>\\n      </ion-item>\\n      <ion-button (click)=\\\"addBusinessDetails()\\\">Add</ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-item>\\n        <ion-label>\\n          Customer Service\\n        </ion-label>\\n        <ion-icon name=\\\"add-circle-outline\\\" (click)=\\\"show('service')\\\" slot=\\\"end\\\" color=\\\"primary\\\"></ion-icon>\\n      </ion-item>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let service of services\\\">\\n          <ion-label>{{service.service_data}}</ion-label>\\n          <ion-icon (click)=\\\"deleteService(service.service_id)\\\" name=\\\"trash\\\" slot=\\\"end\\\" color=\\\"danger\\\"></ion-icon>\\n        </ion-item>\\n        <ion-item id=\\\"service\\\">\\n          <ion-label position=\\\"floating\\\">Add Service</ion-label>\\n          <ion-input name=\\\"service\\\" [(ngModel)]=\\\"service\\\"></ion-input>\\n          <ion-button slot=\\\"end\\\" (click)=\\\"addService()\\\">Add</ion-button>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-item>\\n        <ion-label>\\n          Custom Messages\\n        </ion-label>\\n        <ion-icon name=\\\"add-circle-outline\\\" (click)=\\\"show('message')\\\" slot=\\\"end\\\" color=\\\"primary\\\"></ion-icon>\\n      </ion-item>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let message of messages\\\">\\n          <ion-label>{{message.text_data}}</ion-label>\\n          <ion-icon (click)=\\\"deleteMessage(message.text_id)\\\" name=\\\"trash\\\" slot=\\\"end\\\" color=\\\"danger\\\"></ion-icon>\\n        </ion-item>\\n        <ion-item id=\\\"message\\\">\\n          <ion-label position=\\\"floating\\\">Add Message</ion-label>\\n          <ion-input name=\\\"message\\\" [(ngModel)]=\\\"message\\\"></ion-input>\\n          <ion-button slot=\\\"end\\\" (click)=\\\"addMessage()\\\">Add</ion-button>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}