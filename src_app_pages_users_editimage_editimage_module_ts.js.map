{"version":3,"sources":["./node_modules/html-to-image/es/applyStyleWithOptions.js","./node_modules/html-to-image/es/cloneNode.js","./node_modules/html-to-image/es/clonePseudoElements.js","./node_modules/html-to-image/es/createSvgDataURL.js","./node_modules/html-to-image/es/embedImages.js","./node_modules/html-to-image/es/embedResources.js","./node_modules/html-to-image/es/embedWebFonts.js","./node_modules/html-to-image/es/getBlobFromURL.js","./node_modules/html-to-image/es/index.js","./node_modules/html-to-image/es/util.js","./src/app/pages/users/editimage/editimage-routing.module.ts","./src/app/pages/users/editimage/editimage.module.ts","./src/app/pages/users/editimage/editimage.page.ts","./src/app/pages/users/editimage/editimage.page.scss","./src/app/pages/users/editimage/editimage.page.html"],"names":[],"mappings":";;;;;;;;;;;;;AAAO;AACP,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iD;;;;;;;;;;;;;;;;;;ACpBA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACkD;AACU;AACU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAW;AAC9B;AACA;AACA;AACA,+BAA+B,+DAAc;AAC7C,gCAAgC,gDAAS,YAAY,kDAAW;AAChE,mCAAmC,kDAAW;AAC9C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB,8CAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yEAAmB;AAC3C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8CAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qC;;;;;;;;;;;;;;;;AC9FuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2CAAI;AAC9B;AACA;AACA,sCAAsC,qBAAqB,GAAG,UAAU;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU,GAAG,OAAO;AACjD;AACA;AACA;AACA,0CAA0C,UAAU,EAAE,SAAS;AAC/D;AACA;AACA;AACA,kBAAkB,cAAc,aAAa,4BAA4B,EAAE;AAC3E;AACA;AACA,eAAe,8CAAO;AACtB;AACA;AACA;AACA,sBAAsB,KAAK,IAAI,MAAM,EAAE,+BAA+B;AACtE,SAAS;AACT;AACA;AACA,CAAC,wBAAwB;AAClB;AACP;AACA;AACA;AACA,+C;;;;;;;;;;;;;;;;AC/CsC;AAC/B;AACP;AACA;AACA;AACA,uCAAuC,MAAM;AAC7C,wCAAwC,OAAO;AAC/C,6CAA6C,MAAM,GAAG,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mDAAY;AACvB;AACA,4C;;;;;;;;;;;;;;;;;;ACjBA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACkD;AACA;AACkB;AAC7D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+DAAc;AAC/C;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,qDAAqD,gDAAS;AAC9D;AACA;AACA;AACA;AACA,uBAAuB,+DAAc;AACrC,wBAAwB,gDAAS,YAAY,kDAAW;AACxD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB,8CAAO;AAChC;AACA;AACA,KAAK;AACL;AACA,uC;;;;;;;;;;;;;;;;;;;;;AC7DkD;AACS;AAC3D;AACA;AACA,mEAAmE;AAC5D;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yCAAyC,sBAAsB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA,SAAS;AACT;AACO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,mCAAmC,gDAAS;AAC5C;AACO;AACP;AACA;AACA,wCAAwC,+DAAc;AACtD;AACA;AACA,mBAAmB,gDAAS,OAAO,kDAAW;AAC9C;AACA,eAAe,gDAAS,YAAY,kDAAW;AAC/C,KAAK;AACL,2EAA2E,QAAQ;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,YAAY;AACnD;AACA;AACA,kCAAkC;AAClC;AACA,0C;;;;;;;;;;;;;;;;;;;;ACnFA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACiC;AAC8B;AAC/D;AACO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB,8CAAO;AAC3B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+DAAc;AACjC,SAAS;AACT;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8CAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wBAAwB,8CAAO;AAC/B;AACA,yBAAyB;AACzB;AACA;AACA,0EAA0E,WAAW;AACrF;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,0BAA0B,4DAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,YAAY,OAAO;AAC7E;AACA,aAAa,aAAa,MAAM,gBAAgB,aAAa,GAAG;AAChE;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,cAAc;AACrF;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA,yC;;;;;;;;;;;;;;;;AC5NA;AAC2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,IAAI;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,oBAAoB,oBAAoB;AACxC;AACA,kBAAkB,wDAAiB;AACnC,SAAS;AACT;AACA;AACA;AACA,+CAA+C,QAAQ,sCAAsC,IAAI;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,IAAI,YAAY,WAAW;AAC7F;AACA;AACA;AACA;AACA;AACA,8BAA8B,wDAAiB;AAC/C;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACwC;AACI;AACmB;AACT;AACU;AACuC;AACvG,2CAA2C;AAC3C,mCAAmC,mDAAY;AAC/C,qCAAqC,oDAAa;AAClD,YAAY;AACZ;AACO,oCAAoC;AAC3C;AACA,eAAe,gBAAgB;AAC/B,eAAe,qDAAS;AACxB,kCAAkC,6DAAa;AAC/C,kCAAkC,yDAAW;AAC7C,kCAAkC,6EAAqB;AACvD,kCAAkC,mEAAgB;AAClD,KAAK;AACL;AACO;AACA,uCAAuC;AAC9C;AACA;AACA,kBAAkB,8CAAW;AAC7B,kBAAkB,4CAAK;AACvB;AACA;AACA;AACA,gDAAgD,oDAAa;AAC7D,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD,qCAAqC,aAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACO,0CAA0C;AACjD;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACO,oCAAoC;AAC3C;AACA;AACA,KAAK;AACL;AACO,qCAAqC;AAC5C;AACA;AACA,KAAK;AACL;AACO,qCAAqC;AAC5C;AACA,+CAA+C,+CAAY;AAC3D,KAAK;AACL;AACO,iDAAiD;AACxD;AACA,eAAe,6DAAa;AAC5B,KAAK;AACL;AACA,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrFA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,gCAAgC,sDAAsD;AACtF;AACA;AACA,mBAAmB,SAAS,EAAE,QAAQ;AACtC;AACA,CAAC;AACM;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACO;AACP;AACA;AACO;AACP,mBAAmB,UAAU,SAAS,QAAQ;AAC9C;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA,yCAAyC,oBAAoB;AAC7D,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB,KAAK;AACrE,KAAK;AACL;AACO;AACP;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,gC;;;;;;;;;;;;;;;;;;;;ACrJyC;AACc;AAEN;AAEjD,MAAM,M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","file":"src_app_pages_users_editimage_editimage_module_ts.js","sourcesContent":["export function applyStyleWithOptions(clonedNode, options) {\n    const { style } = clonedNode;\n    if (options.backgroundColor) {\n        style.backgroundColor = options.backgroundColor;\n    }\n    if (options.width) {\n        style.width = `${options.width}px`;\n    }\n    if (options.height) {\n        style.height = `${options.height}px`;\n    }\n    const manual = options.style;\n    if (manual != null) {\n        Object.keys(manual).forEach((key) => {\n            // @ts-expect-error\n            style[key] = manual[key];\n        });\n    }\n    return clonedNode;\n}\n//# sourceMappingURL=applyStyleWithOptions.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { clonePseudoElements } from './clonePseudoElements';\nimport { createImage, toArray, toDataURL, getMimeType } from './util';\nfunction cloneSingleNode(node, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (node instanceof HTMLCanvasElement) {\n            const dataURL = node.toDataURL();\n            if (dataURL === 'data:,') {\n                return Promise.resolve(node.cloneNode(false));\n            }\n            return createImage(dataURL);\n        }\n        if (node instanceof HTMLVideoElement && node.poster) {\n            return Promise.resolve(node.poster)\n                .then((url) => getBlobFromURL(url, options))\n                .then((data) => toDataURL(data.blob, getMimeType(node.poster) || data.contentType))\n                .then((dataURL) => createImage(dataURL));\n        }\n        return Promise.resolve(node.cloneNode(false));\n    });\n}\nfunction cloneChildren(nativeNode, clonedNode, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const children = toArray(((_a = nativeNode.shadowRoot) !== null && _a !== void 0 ? _a : nativeNode).childNodes);\n        if (children.length === 0) {\n            return Promise.resolve(clonedNode);\n        }\n        return children\n            .reduce((done, child) => done\n            .then(() => cloneNode(child, options))\n            .then((clonedChild) => {\n            if (clonedChild) {\n                clonedNode.appendChild(clonedChild);\n            }\n        }), Promise.resolve())\n            .then(() => clonedNode);\n    });\n}\nfunction decorate(nativeNode, clonedNode) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!(clonedNode instanceof Element)) {\n            return clonedNode;\n        }\n        return Promise.resolve()\n            .then(() => cloneCssStyle(nativeNode, clonedNode))\n            .then(() => clonePseudoElements(nativeNode, clonedNode))\n            .then(() => cloneInputValue(nativeNode, clonedNode))\n            .then(() => clonedNode);\n    });\n}\nfunction cloneCssStyle(nativeNode, clonedNode) {\n    const source = window.getComputedStyle(nativeNode);\n    const target = clonedNode.style;\n    if (!target) {\n        return;\n    }\n    if (source.cssText) {\n        target.cssText = source.cssText;\n    }\n    else {\n        toArray(source).forEach((name) => {\n            target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (nativeNode instanceof HTMLTextAreaElement) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (nativeNode instanceof HTMLInputElement) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nexport function cloneNode(nativeNode, options, isRoot) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!isRoot && options.filter && !options.filter(nativeNode)) {\n            return Promise.resolve(null);\n        }\n        return Promise.resolve(nativeNode)\n            .then((clonedNode) => cloneSingleNode(clonedNode, options))\n            .then((clonedNode) => cloneChildren(nativeNode, clonedNode, options))\n            .then((clonedNode) => decorate(nativeNode, clonedNode));\n    });\n}\n//# sourceMappingURL=cloneNode.js.map","import { uuid, toArray } from './util';\nvar Pseudo;\n(function (Pseudo) {\n    function clonePseudoElement(nativeNode, clonedNode, pseudo) {\n        const style = window.getComputedStyle(nativeNode, pseudo);\n        const content = style.getPropertyValue('content');\n        if (content === '' || content === 'none') {\n            return;\n        }\n        const className = uuid();\n        // fix: Cannot assign to read only property 'className' of object '#<…\n        try {\n            clonedNode.className = `${clonedNode.className} ${className}`;\n        }\n        catch (err) {\n            return;\n        }\n        const styleElement = document.createElement('style');\n        styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n        clonedNode.appendChild(styleElement);\n    }\n    Pseudo.clonePseudoElement = clonePseudoElement;\n    function getPseudoElementStyle(className, pseudo, style) {\n        const selector = `.${className}:${pseudo}`;\n        const cssText = style.cssText\n            ? formatCssText(style)\n            : formatCssProperties(style);\n        return document.createTextNode(`${selector}{${cssText}}`);\n    }\n    function formatCssText(style) {\n        const content = style.getPropertyValue('content');\n        return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n    }\n    function formatCssProperties(style) {\n        return toArray(style)\n            .map((name) => {\n            const value = style.getPropertyValue(name);\n            const priority = style.getPropertyPriority(name);\n            return `${name}: ${value}${priority ? ' !important' : ''};`;\n        })\n            .join(' ');\n    }\n})(Pseudo || (Pseudo = {}));\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    const pseudos = [':before', ':after'];\n    pseudos.forEach((pseudo) => Pseudo.clonePseudoElement(nativeNode, clonedNode, pseudo));\n}\n//# sourceMappingURL=clonePseudoElements.js.map","import { svgToDataURL } from './util';\nexport function createSvgDataURL(clonedNode, width, height) {\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const svg = document.createElementNS(xmlns, 'svg');\n    const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n    svg.setAttributeNS('', 'width', `${width}`);\n    svg.setAttributeNS('', 'height', `${height}`);\n    svg.setAttributeNS('', 'viewBox', `0 0 ${width} ${height}`);\n    foreignObject.setAttributeNS('', 'width', '100%');\n    foreignObject.setAttributeNS('', 'height', '100%');\n    foreignObject.setAttributeNS('', 'x', '0');\n    foreignObject.setAttributeNS('', 'y', '0');\n    foreignObject.setAttributeNS('', 'externalResourcesRequired', 'true');\n    svg.appendChild(foreignObject);\n    foreignObject.appendChild(clonedNode);\n    return svgToDataURL(svg);\n}\n//# sourceMappingURL=createSvgDataURL.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { embedResources } from './embedResources';\nimport { toArray, isDataUrl, toDataURL, getMimeType } from './util';\nexport function embedImages(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!(clonedNode instanceof Element)) {\n            return Promise.resolve(clonedNode);\n        }\n        return Promise.resolve(clonedNode)\n            .then((node) => embedBackground(node, options))\n            .then((node) => embedImageNode(node, options))\n            .then((node) => embedChildren(node, options));\n    });\n}\nfunction embedBackground(clonedNode, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const background = (_a = clonedNode.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue('background');\n        if (!background) {\n            return Promise.resolve(clonedNode);\n        }\n        return Promise.resolve(background)\n            .then((cssString) => embedResources(cssString, null, options))\n            .then((cssString) => {\n            clonedNode.style.setProperty('background', cssString, clonedNode.style.getPropertyPriority('background'));\n            return clonedNode;\n        });\n    });\n}\nfunction embedImageNode(clonedNode, options) {\n    if (!(clonedNode instanceof HTMLImageElement) || isDataUrl(clonedNode.src)) {\n        return Promise.resolve(clonedNode);\n    }\n    const src = clonedNode.src;\n    return Promise.resolve(src)\n        .then((url) => getBlobFromURL(url, options))\n        .then((data) => toDataURL(data.blob, getMimeType(src) || data.contentType))\n        .then((dataURL) => new Promise((resolve, reject) => {\n        clonedNode.onload = resolve;\n        clonedNode.onerror = reject;\n        clonedNode.srcset = '';\n        clonedNode.src = dataURL;\n    }))\n        .then(() => clonedNode, () => clonedNode);\n}\nfunction embedChildren(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const children = toArray(clonedNode.childNodes);\n        const deferreds = children.map((child) => embedImages(child, options));\n        return Promise.all(deferreds).then(() => clonedNode);\n    });\n}\n//# sourceMappingURL=embedImages.js.map","import { getBlobFromURL } from './getBlobFromURL';\nimport { isDataUrl, toDataURL, getMimeType } from './util';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"'])([^\"']+)\\1\\)/g;\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nexport function shouldEmbed(string) {\n    return string.search(URL_REGEX) !== -1;\n}\nexport function embedResources(cssString, baseUrl, options) {\n    if (!shouldEmbed(cssString)) {\n        return Promise.resolve(cssString);\n    }\n    const filteredCssString = filterPreferredFontFormat(cssString, options);\n    return Promise.resolve(filteredCssString)\n        .then(parseURLs)\n        .then((urls) => urls.reduce((done, url) => done.then((ret) => embed(ret, url, baseUrl, options)), Promise.resolve(filteredCssString)));\n}\nexport function filterPreferredFontFormat(str, { preferredFontFormat }) {\n    return !preferredFontFormat\n        ? str\n        : str.replace(FONT_SRC_REGEX, (match) => {\n            while (true) {\n                const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || [];\n                if (!format) {\n                    return '';\n                }\n                if (format === preferredFontFormat) {\n                    return `src: ${src};`;\n                }\n            }\n        });\n}\nexport function parseURLs(str) {\n    const result = [];\n    str.replace(URL_REGEX, (raw, quotation, url) => {\n        result.push(url);\n        return raw;\n    });\n    return result.filter((url) => !isDataUrl(url));\n}\nexport function embed(cssString, resourceURL, baseURL, options, get) {\n    const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n    return Promise.resolve(resolvedURL)\n        .then((url) => get ? get(url) : getBlobFromURL(url, options))\n        .then((data) => {\n        if (typeof data === 'string') {\n            return toDataURL(data, getMimeType(resourceURL));\n        }\n        return toDataURL(data.blob, getMimeType(resourceURL) || data.contentType);\n    })\n        .then((dataURL) => cssString.replace(urlToRegex(resourceURL), `$1${dataURL}$3`))\n        .then((content) => content, () => resolvedURL);\n}\nfunction resolveUrl(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) {\n        return url;\n    }\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) {\n        return window.location.protocol + url;\n    }\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) {\n        return url;\n    }\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement('base');\n    const a = doc.createElement('a');\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) {\n        base.href = baseUrl;\n    }\n    a.href = url;\n    return a.href;\n}\nfunction urlToRegex(url) {\n    return new RegExp(`(url\\\\(['\"]?)(${escape(url)})(['\"]?\\\\))`, 'g');\n}\nfunction escape(url) {\n    return url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n}\n//# sourceMappingURL=embedResources.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { toArray } from './util';\nimport { shouldEmbed, embedResources } from './embedResources';\nconst cssFetchPromiseStore = {};\nexport function parseWebFontRules(clonedNode) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            if (!clonedNode.ownerDocument) {\n                reject(new Error('Provided element is not within a Document'));\n            }\n            resolve(toArray(clonedNode.ownerDocument.styleSheets));\n        })\n            .then((styleSheets) => getCssRules(styleSheets))\n            .then(getWebFontRules);\n    });\n}\nexport function embedWebFonts(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return (options.fontEmbedCss != null\n            ? Promise.resolve(options.fontEmbedCss)\n            : getWebFontCss(clonedNode, options)).then((cssString) => {\n            const styleNode = document.createElement('style');\n            const sytleContent = document.createTextNode(cssString);\n            styleNode.appendChild(sytleContent);\n            if (clonedNode.firstChild) {\n                clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n            }\n            else {\n                clonedNode.appendChild(styleNode);\n            }\n            return clonedNode;\n        });\n    });\n}\nexport function getWebFontCss(node, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return parseWebFontRules(node)\n            .then((rules) => Promise.all(rules.map((rule) => {\n            const baseUrl = rule.parentStyleSheet\n                ? rule.parentStyleSheet.href\n                : null;\n            return embedResources(rule.cssText, baseUrl, options);\n        })))\n            .then((cssStrings) => cssStrings.join('\\n'));\n    });\n}\nexport function getCssRules(styleSheets) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const ret = [];\n        const promises = [];\n        // First loop inlines imports\n        styleSheets.forEach((sheet) => {\n            if ('cssRules' in sheet) {\n                try {\n                    toArray(sheet.cssRules).forEach((item, index) => {\n                        if (item.type === CSSRule.IMPORT_RULE) {\n                            let importIndex = index + 1;\n                            promises.push(fetchCSS(item.href, sheet)\n                                .then(embedFonts)\n                                .then((cssText) => {\n                                const parsed = parseCSS(cssText);\n                                parsed.forEach((rule) => {\n                                    try {\n                                        sheet.insertRule(rule, rule.startsWith('@import')\n                                            ? (importIndex = importIndex + 1)\n                                            : sheet.cssRules.length);\n                                    }\n                                    catch (error) {\n                                        console.log('Error inserting rule from remote css', {\n                                            rule,\n                                            error,\n                                        });\n                                    }\n                                });\n                            })\n                                .catch((e) => {\n                                console.log('Error loading remote css', e.toString());\n                            }));\n                        }\n                    });\n                }\n                catch (e) {\n                    const inline = styleSheets.find((a) => a.href === null) || document.styleSheets[0];\n                    if (sheet.href != null) {\n                        promises.push(fetchCSS(sheet.href, inline)\n                            .then(embedFonts)\n                            .then((cssText) => {\n                            const parsed = parseCSS(cssText);\n                            parsed.forEach((rule) => {\n                                inline.insertRule(rule, sheet.cssRules.length);\n                            });\n                        })\n                            .catch((e) => {\n                            console.log('Error loading remote stylesheet', e.toString());\n                        }));\n                    }\n                    console.log('Error inlining remote css file', e.toString());\n                }\n            }\n        });\n        return Promise.all(promises).then(() => {\n            // Second loop parses rules\n            styleSheets.forEach((sheet) => {\n                if ('cssRules' in sheet) {\n                    try {\n                        toArray(sheet.cssRules).forEach((item) => {\n                            ret.push(item);\n                        });\n                    }\n                    catch (e) {\n                        console.log(`Error while reading CSS rules from ${sheet.href}`, e.toString());\n                    }\n                }\n            });\n            return ret;\n        });\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n        .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')));\n}\nfunction parseCSS(source) {\n    if (source === undefined) {\n        return [];\n    }\n    let cssText = source;\n    const css = [];\n    const cssKeyframeRegex = '((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})';\n    const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n        '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})'; // to match css & media queries together\n    const cssCommentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi;\n    const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi;\n    // strip out comments\n    cssText = cssText.replace(cssCommentsRegex, '');\n    const keyframesRegex = new RegExp(cssKeyframeRegex, 'gi');\n    let arr;\n    while (true) {\n        arr = keyframesRegex.exec(cssText);\n        if (arr === null) {\n            break;\n        }\n        css.push(arr[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    // unified regex\n    const unified = new RegExp(combinedCSSRegex, 'gi');\n    while (true) {\n        arr = importRegex.exec(cssText);\n        if (arr === null) {\n            arr = unified.exec(cssText);\n            if (arr === null) {\n                break;\n            }\n            else {\n                importRegex.lastIndex = unified.lastIndex;\n            }\n        }\n        else {\n            unified.lastIndex = importRegex.lastIndex;\n        }\n        css.push(arr[0]);\n    }\n    return css;\n}\nfunction fetchCSS(url, sheet) {\n    if (cssFetchPromiseStore[url]) {\n        return cssFetchPromiseStore[url];\n    }\n    const promise = fetch(url).then((res) => {\n        return {\n            url,\n            cssText: res.text(),\n        };\n    }, (e) => {\n        console.log('ERROR FETCHING CSS: ', e.toString());\n    });\n    cssFetchPromiseStore[url] = promise;\n    return promise;\n}\nfunction embedFonts(data) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return data.cssText.then((resolved) => {\n            let cssText = resolved;\n            const regexUrlFind = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n            const fontLocations = cssText.match(/url\\([^)]+\\)/g) || [];\n            const fontLoadedPromises = fontLocations.map((location) => {\n                let url = location.replace(regexUrlFind, '$1');\n                if (!url.startsWith('https://')) {\n                    const source = data.url;\n                    url = new URL(url, source).href;\n                }\n                return new Promise((resolve, reject) => {\n                    fetch(url)\n                        .then((res) => res.blob())\n                        .then((blob) => {\n                        const reader = new FileReader();\n                        reader.addEventListener('load', (res) => {\n                            // Side Effect\n                            cssText = cssText.replace(location, `url(${reader.result})`);\n                            resolve([location, reader.result]);\n                        });\n                        reader.readAsDataURL(blob);\n                    })\n                        .catch(reject);\n                });\n            });\n            return Promise.all(fontLoadedPromises).then(() => cssText);\n        });\n    });\n}\n//# sourceMappingURL=embedWebFonts.js.map","/* tslint:disable:max-line-length */\nimport { getDataURLContent } from './util';\n// KNOWN ISSUE\n// -----------\n// Can not handle redirect-url, such as when access 'http://something.com/avatar.png'\n// will redirect to 'http://something.com/65fc2ffcc8aea7ba65a1d1feda173540'\nconst TIMEOUT = 30000;\nconst cache = {};\nfunction isFont(filename) {\n    return /ttf|otf|eot|woff2?/i.test(filename);\n}\nexport function getBlobFromURL(url, options) {\n    let href = url.replace(/\\?.*/, '');\n    if (isFont(href)) {\n        href = href.replace(/.*\\//, '');\n    }\n    if (cache[href]) {\n        return cache[href];\n    }\n    // cache bypass so we dont have CORS issues with cached images\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) {\n        // tslint:disable-next-line\n        url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n    }\n    const failed = (reason) => {\n        let placeholder = '';\n        if (options.imagePlaceholder) {\n            const parts = options.imagePlaceholder.split(/,/);\n            if (parts && parts[1]) {\n                placeholder = parts[1];\n            }\n        }\n        let msg = `Failed to fetch resource: ${url}`;\n        if (reason) {\n            msg = typeof reason === 'string' ? reason : reason.message;\n        }\n        if (msg) {\n            console.error(msg);\n        }\n        return placeholder;\n    };\n    const deferred = window.fetch\n        ? window\n            .fetch(url)\n            .then((res) => res.blob().then((blob) => ({\n            blob,\n            contentType: res.headers.get('Content-Type') || '',\n        })))\n            .then(({ blob, contentType }) => new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onloadend = () => resolve({\n                contentType,\n                blob: reader.result,\n            });\n            reader.onerror = reject;\n            reader.readAsDataURL(blob);\n        }))\n            .then(({ blob, contentType }) => ({\n            contentType,\n            blob: getDataURLContent(blob),\n        }))\n        : new Promise((resolve, reject) => {\n            const req = new XMLHttpRequest();\n            const timeout = () => {\n                reject(new Error(`Timeout of ${TIMEOUT}ms occured while fetching resource: ${url}`));\n            };\n            const done = () => {\n                if (req.readyState !== 4) {\n                    return;\n                }\n                if (req.status !== 200) {\n                    reject(new Error(`Failed to fetch resource: ${url}, status: ${req.status}`));\n                    return;\n                }\n                const encoder = new FileReader();\n                encoder.onloadend = () => {\n                    resolve({\n                        blob: getDataURLContent(encoder.result),\n                        contentType: req.getResponseHeader('Content-Type') || '',\n                    });\n                };\n                encoder.readAsDataURL(req.response);\n            };\n            req.onreadystatechange = done;\n            req.ontimeout = timeout;\n            req.responseType = 'blob';\n            req.timeout = TIMEOUT;\n            req.open('GET', url, true);\n            req.send();\n        });\n    const promise = deferred.catch(failed);\n    // cache result\n    cache[href] = promise;\n    return promise;\n}\n//# sourceMappingURL=getBlobFromURL.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { cloneNode } from './cloneNode';\nimport { embedImages } from './embedImages';\nimport { embedWebFonts, getWebFontCss } from './embedWebFonts';\nimport { createSvgDataURL } from './createSvgDataURL';\nimport { applyStyleWithOptions } from './applyStyleWithOptions';\nimport { delay, createImage, canvasToBlob, getNodeWidth, getNodeHeight, getPixelRatio, } from './util';\nfunction getImageSize(domNode, options = {}) {\n    const width = options.width || getNodeWidth(domNode);\n    const height = options.height || getNodeHeight(domNode);\n    return { width, height };\n}\nexport function toSvg(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { width, height } = getImageSize(domNode, options);\n        return cloneNode(domNode, options, true)\n            .then((clonedNode) => embedWebFonts(clonedNode, options))\n            .then((clonedNode) => embedImages(clonedNode, options))\n            .then((clonedNode) => applyStyleWithOptions(clonedNode, options))\n            .then((clonedNode) => createSvgDataURL(clonedNode, width, height));\n    });\n}\nexport const toSvgDataURL = toSvg;\nexport function toCanvas(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toSvg(domNode, options)\n            .then(createImage)\n            .then(delay(100))\n            .then((image) => {\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            const ratio = options.pixelRatio || getPixelRatio();\n            const { width, height } = getImageSize(domNode, options);\n            const canvasWidth = options.canvasWidth || width;\n            const canvasHeight = options.canvasHeight || height;\n            canvas.width = canvasWidth * ratio;\n            canvas.height = canvasHeight * ratio;\n            canvas.style.width = `${canvasWidth}`;\n            canvas.style.height = `${canvasHeight}`;\n            if (options.backgroundColor) {\n                context.fillStyle = options.backgroundColor;\n                context.fillRect(0, 0, canvas.width, canvas.height);\n            }\n            context.drawImage(image, 0, 0, canvas.width, canvas.height);\n            return canvas;\n        });\n    });\n}\nexport function toPixelData(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { width, height } = getImageSize(domNode, options);\n        return toCanvas(domNode, options).then((canvas) => {\n            const ctx = canvas.getContext('2d');\n            return ctx.getImageData(0, 0, width, height).data;\n        });\n    });\n}\nexport function toPng(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toCanvas(domNode, options).then((canvas) => canvas.toDataURL());\n    });\n}\nexport function toJpeg(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toCanvas(domNode, options).then((canvas) => canvas.toDataURL('image/jpeg', options.quality || 1));\n    });\n}\nexport function toBlob(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toCanvas(domNode, options).then(canvasToBlob);\n    });\n}\nexport function getWebFontEmbedCss(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return getWebFontCss(domNode, options);\n    });\n}\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n};\nexport const uuid = (function uuid() {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => `0000${((Math.random() * Math.pow(36, 4)) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport function getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const ext = getExtension(url).toLowerCase();\n    return mimes[ext] || '';\n}\nexport function delay(ms) {\n    return (args) => new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(args);\n        }, ms);\n    });\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function toDataURL(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport function getDataURLContent(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nfunction toBlob(canvas) {\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], { type: 'image/png' }));\n    });\n}\nexport function canvasToBlob(canvas) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => canvas.toBlob(resolve));\n    }\n    return toBlob(canvas);\n}\nexport function toArray(arrayLike) {\n    const result = [];\n    for (let i = 0, l = arrayLike.length; i < l; i += 1) {\n        result.push(arrayLike[i]);\n    }\n    return result;\n}\nfunction px(node, styleProperty) {\n    const val = window.getComputedStyle(node).getPropertyValue(styleProperty);\n    return parseFloat(val.replace('px', ''));\n}\nexport function getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.clientWidth + leftBorder + rightBorder;\n}\nexport function getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.clientHeight + topBorder + bottomBorder;\n}\nexport function getPixelRatio() {\n    let ratio;\n    let FINAL_PROCESS;\n    try {\n        FINAL_PROCESS = process;\n    }\n    catch (e) { }\n    const val = FINAL_PROCESS && FINAL_PROCESS.env\n        ? FINAL_PROCESS.env.devicePixelRatio\n        : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.onload = () => resolve(image);\n        image.onerror = reject;\n        image.crossOrigin = 'anonymous';\n        image.src = url;\n    });\n}\nexport function svgToDataURL(svg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return Promise.resolve()\n            .then(() => new XMLSerializer().serializeToString(svg))\n            .then(encodeURIComponent)\n            .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n    });\n}\nexport function getBlobFromImageURL(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return createImage(url).then((image) => {\n            const { width, height } = image;\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            const ratio = getPixelRatio();\n            canvas.width = width * ratio;\n            canvas.height = height * ratio;\n            canvas.style.width = `${width}`;\n            canvas.style.height = `${height}`;\n            context.scale(ratio, ratio);\n            context.drawImage(image, 0, 0);\n            const dataURL = canvas.toDataURL(getMimeType(url));\n            return getDataURLContent(dataURL);\n        });\n    });\n}\n//# sourceMappingURL=util.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditimagePage } from './editimage.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditimagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditimagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditimagePageRoutingModule } from './editimage-routing.module';\n\nimport { EditimagePage } from './editimage.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditimagePageRoutingModule\n  ],\n  declarations: [EditimagePage]\n})\nexport class EditimagePageModule {}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Location } from '@angular/common'\nimport * as htmlToImage from 'html-to-image';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service'\nimport { AlertService } from 'src/app/services/alert.service';\nimport { TokenStorageService } from 'src/app/services/tokenstorage.service';\n\n@Component({\n  selector: 'app-editimage',\n  templateUrl: './editimage.page.html',\n  styleUrls: ['./editimage.page.scss'],\n})\nexport class EditimagePage implements OnInit {\n\n  @ViewChild('canvas') canvas: ElementRef;\n  @ViewChild('downloadLink') downloadLink: ElementRef;\n  @ViewChild(\"uploader\", {static: true}) uploader: ElementRef<HTMLInputElement>;\n\n  image_url: any;\n  logo;\n  user_id: Number;\n  business_id: Number;\n  edited_image_url: any;\n  templates: [];\n  businessName = \"Company\";\n  contactNo = 1234567890;\n\n  constructor(\n    private location:Location,\n    private router: Router,\n    private userService: UserService,\n    private alertService: AlertService,\n    private tokenStorage: TokenStorageService\n  ){ }\n\n  ngOnInit() {\n    this.getImage();\n    this.getUser();\n    this.getBusinessDetails();\n  }\n\n  getBusinessDetails() {\n    this.userService.getBusinessDetails(this.user_id).subscribe(\n      data=> {\n        if(data['businessName'] !== null) {\n          this.businessName= data['businessName'];\n        }\n        if(!data['contactNo'] !== null) {\n          this.contactNo= data['contactNo'];\n        }\n      }\n    )\n  }\n\n  popFileChooser(): void {\n    this.uploader.nativeElement.click();\n  }\n  onSelectFile(event) {\n    if(event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = (event) => {\n        this.logo = (event.target.result);\n      }\n    }\n  }\n\n  getImage(){\n    this.image_url = this.userService.getImageFromStorage();\n  }\n\n  getUser() {\n    let user = this.tokenStorage.DecodeToken();\n    this.user_id = user['user_id'];\n    this.business_id = user['business_id']\n  }\n      \n  downloadImage(){\n    let image = document.getElementById(\"image\");\n    htmlToImage.toCanvas(image).then(canvas => {\n      this.canvas.nativeElement.src = canvas.toDataURL();\n      this.downloadLink.nativeElement.href = canvas.toDataURL('image/png');\n      this.downloadLink.nativeElement.download = 'image.png';\n      this.downloadLink.nativeElement.click();\n      this.userService.saveEditedImage(canvas.toDataURL(), this.user_id).subscribe( data => {\n        this.alertService.presentToast(data['msg'], 'success');\n        this.router.navigate(['/home']);\n      })\n    });\n  }\n\n  ngOnDestroy(){\n    this.userService.remove('image');\n  }\n}","export default \"ion-back-button {\\n  display: block;\\n}\\n\\n#choose-file {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n}\\n\\n.content {\\n  position: relative;\\n  display: grid;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.content ion-card {\\n  z-index: 1;\\n  display: grid;\\n  grid-template-columns: repeat(1, 1fr);\\n}\\n\\n.content ion-card ion-card-content {\\n  position: relative;\\n  display: grid;\\n  align-items: center;\\n  justify-items: center;\\n}\\n\\n.content ion-card ion-card-content #logo {\\n  position: absolute;\\n  top: 4%;\\n  left: 7%;\\n  border-radius: 50%;\\n  width: 55px;\\n  height: 60px;\\n}\\n\\n.content ion-card ion-card-content #background-img {\\n  background-size: cover;\\n  background-attachment: fixed;\\n}\\n\\n.content ion-card ion-card-content #businessName {\\n  position: absolute;\\n  top: 3.5%;\\n  left: 24%;\\n  display: flex;\\n  align-items: center;\\n  text-align: center;\\n  justify-content: center;\\n  word-break: break-all;\\n  z-index: 5;\\n  height: 65px;\\n  width: 210px;\\n}\\n\\n.content ion-card ion-card-content #businessName h1 {\\n  color: #1d1c1c;\\n  text-overflow: ellipsis;\\n  font-size: 1.6rem;\\n  font-weight: 700;\\n}\\n\\n.content ion-card ion-card-content h4 {\\n  position: absolute;\\n  z-index: 5;\\n  color: #1d1c1c;\\n  top: 13.8%;\\n  left: 48%;\\n  font-weight: 700;\\n  font-size: 0.9rem;\\n}\\n\\n.content ion-button {\\n  margin: 0 1rem;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  justify-self: center;\\n}\\n\\n.content ion-button ion-icon {\\n  margin-right: 1rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkaXRpbWFnZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsMEJBQWtCO0VBQWxCLHVCQUFrQjtFQUFsQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekI7O0FBTEE7RUFNSSxVQUFTO0VBQ1QsYUFBYTtFQUNiLHFDQUFxQztBQUd6Qzs7QUFYQTtFQVVNLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHFCQUFxQjtBQUszQjs7QUFsQkE7RUFnQlEsa0JBQWtCO0VBQ2xCLE9BQU87RUFDUCxRQUFRO0VBQ1Isa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0FBTXBCOztBQTNCQTtFQXlCUSxzQkFBc0I7RUFDdEIsNEJBQTRCO0FBTXBDOztBQWhDQTtFQThCUSxrQkFBa0I7RUFDbEIsU0FBUztFQUNULFNBQVM7RUFDVCxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIscUJBQXFCO0VBQ3JCLFVBQVU7RUFDVixZQUFZO0VBQ1osWUFBWTtBQU1wQjs7QUE5Q0E7RUEwQ1UsY0FBc0I7RUFDdEIsdUJBQXVCO0VBQ3ZCLGlCQUFpQjtFQUNqQixnQkFBZ0I7QUFRMUI7O0FBckRBO0VBbURRLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsY0FBc0I7RUFDdEIsVUFBUztFQUNULFNBQVM7RUFDVCxnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBTXpCOztBQS9EQTtFQStESSxjQUFjO0VBQ2QsMEJBQWtCO0VBQWxCLHVCQUFrQjtFQUFsQixrQkFBa0I7RUFDbEIsb0JBQW9CO0FBSXhCOztBQXJFQTtFQW9FTSxrQkFBa0I7QUFLeEIiLCJmaWxlIjoiZWRpdGltYWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1iYWNrLWJ1dHRvbntcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbiNjaG9vc2UtZmlsZXtcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xufVxuXG4uY29udGVudHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBncmlkO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgaW9uLWNhcmR7XG4gICAgei1pbmRleDoxO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMSwgMWZyKTtcbiAgICBpb24tY2FyZC1jb250ZW50e1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAgICNsb2dve1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogNCU7XG4gICAgICAgIGxlZnQ6IDclO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIHdpZHRoOiA1NXB4O1xuICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICB9XG4gICAgICBcbiAgICAgICNiYWNrZ3JvdW5kLWltZ3tcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgI2J1c2luZXNzTmFtZXtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDMuNSU7XG4gICAgICAgIGxlZnQ6IDI0JTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgd29yZC1icmVhazogYnJlYWstYWxsO1xuICAgICAgICB6LWluZGV4OiA1O1xuICAgICAgICBoZWlnaHQ6IDY1cHg7XG4gICAgICAgIHdpZHRoOiAyMTBweDtcbiAgICAgICAgaDF7XG4gICAgICAgICAgY29sb3I6IHJnYigyOSwgMjgsIDI4KTtcbiAgICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIFxuICAgICAgaDR7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgei1pbmRleDogNTtcbiAgICAgICAgY29sb3I6IHJnYigyOSwgMjgsIDI4KTtcbiAgICAgICAgdG9wOjEzLjglO1xuICAgICAgICBsZWZ0OiA0OCU7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBcbiAgaW9uLWJ1dHRvbntcbiAgICBtYXJnaW46IDAgMXJlbTtcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG5cbiAgICBpb24taWNvbntcbiAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-button slot=\\\"end\\\" id=\\\"choose-file\\\" (click)=\\\"popFileChooser()\\\">\\n      Upload Logo\\n      <input type=\\\"file\\\" (change)=\\\"onSelectFile($event)\\\" accept=\\\"image/png, image/gif, image/jpeg\\\" #uploader hidden>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"content\\\">\\n    <ion-card>\\n      <ion-card-content id=\\\"image\\\">\\n        <!-- <ion-img [src]=\\\"logo\\\" id=\\\"logo\\\"></ion-img> -->\\n        <img [src]=\\\"logo\\\" id=\\\"logo\\\" *ngIf=\\\"logo\\\">\\n        <ion-img [src]=\\\"'data:image/png;base64, '+image_url\\\" id=\\\"background-img\\\"></ion-img>\\n        <div id=\\\"businessName\\\">\\n          <h1 contenteditable=\\\"true\\\">{{businessName}}</h1>\\n        </div>\\n        <h4 contenteditable=\\\"true\\\">+91{{contactNo}}</h4>\\n      </ion-card-content>\\n    </ion-card>\\n    <ion-button (click)=\\\"downloadImage()\\\">\\n      <ion-icon name=\\\"cloud-download-outline\\\"></ion-icon> Download Image\\n    </ion-button>\\n  </div>\\n  <div id=\\\"download\\\">\\n    <img #canvas>\\n    <a #downloadLink></a>\\n  </div>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}